// client/src/pages/BoardPage.tsx
import { useState } from "react";
import { useParams } from "react-router-dom";
import {
	useMutation,
	useQuery,
	useQueryClient,
	keepPreviousData,
} from "@tanstack/react-query";

import AppShell from "../ui/shell/AppShell";
import BoardHeader from "../ui/kanban/BoardHeader";
import BoardView from "../ui/kanban/BoardView";
import DeskSettingsModal from "../ui/kanban/DeskSettingsModal";
import GanttPage from "./GanttPage";
import CalendarPage from "./CalendarPage";
import { Button, Input, Modal } from "../ui/primitives";

import {
	loadBoard,
	createColumn,
	type BoardPayload,
	type Column,
} from "../api";
import { useBoardFilters } from "../hooks/useBoardFilters";

// üëá –¥–æ–±–∞–≤–∏–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã –∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
import { defaultStickers, type StickerItem } from "../ui/desk/stickers.model";

type Tab = "board" | "gantt" | "calendar";

export default function BoardPage() {
	const { projectId = "" } = useParams();
	const [tab, setTab] = useState<Tab>("board");

	// —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ URL
	const [filters, setFilters] = useBoardFilters();

	const qc = useQueryClient();

	const { data, isLoading } = useQuery<BoardPayload>({
		queryKey: ["board", projectId],
		queryFn: () => loadBoard(projectId),
		placeholderData: keepPreviousData,
	});

	// ---- –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–∞–ª–∫–∏/—Å–æ—Å—Ç–æ—è–Ω–∏—è
	const [showCreateCol, setShowCreateCol] = useState(false);
	const [newColTitle, setNewColTitle] = useState("");
	const [showMirror, setShowMirror] = useState(false);

	// —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–∞–ª–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å–∫–∏
	const [settingsOpen, setSettingsOpen] = useState(false);

	// –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã (–ø–æ–∫–∞ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —Å API)
	const [stickers, setStickers] = useState<StickerItem[]>(() =>
		defaultStickers(),
	);

	// –ø–æ–∑–∏—Ü–∏—è –Ω–æ–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏ (–≤ –∫–æ–Ω–µ—Ü —Å —à–∞–≥–æ–º 100)
	const nextColPos =
		(data?.columns.reduce((m, c) => Math.max(m, Number(c.position) || 0), 0) ??
			0) + 100;

	// —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
	const createColMutation = useMutation<Column, Error, void>({
		mutationFn: async () => {
			if (!data) throw new Error("board not loaded");
			const payload = {
				boardId: data.board.id,
				title: newColTitle.trim(),
				position: nextColPos,
			};
			return createColumn(payload);
		},
		onSuccess: col => {
			qc.setQueryData<BoardPayload>(["board", projectId], old =>
				old ? { ...old, columns: [...old.columns, col] } : old,
			);
			setNewColTitle("");
			setShowCreateCol(false);
		},
	});

	// —ç–∫—à–µ–Ω—ã –¥–ª—è –ø—Ä–∞–≤–æ–≥–æ —Ä–µ–π–ª–∞
	const handleAddColumn = () => setShowCreateCol(true);
	const handleOpenSettings = () => setSettingsOpen(true);
	const handleOpenMirror = () => setShowMirror(true);

	return (
		<AppShell>
			<BoardHeader
				active={tab}
				onTab={setTab}
				filters={filters}
				onFiltersChange={setFilters}
				projectId={projectId}
				onOpenSettings={() => setSettingsOpen(true)}
				onAddSticker={() => setSettingsOpen(true)}
			/>

			{isLoading || !data ? (
				<div className='p-6 text-sm text-neutral-500'>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>
			) : tab === "board" ? (
				<BoardView
					payload={data}
					projectId={projectId}
					filters={filters}
					onAddColumn={handleAddColumn}
					onCreateSummary={handleOpenSettings}
					onCreateMirror={handleOpenMirror}
				/>
			) : tab === "gantt" ? (
				<GanttPage />
			) : (
				<CalendarPage />
			)}

			{/* ---- –ú–æ–¥–∞–ª–∫–∞: —Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É ---- */}
			<Modal
				open={showCreateCol}
				onClose={() => setShowCreateCol(false)}
				title='–ù–æ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞'>
				<div className='space-y-3'>
					<Input
						autoFocus
						placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏'
						value={newColTitle}
						onChange={e => setNewColTitle(e.target.value)}
					/>
					{createColMutation.isError && (
						<div className='text-sm text-red-600'>
							{(createColMutation.error as Error).message}
						</div>
					)}
					<div className='flex justify-end gap-2 pt-2'>
						<Button variant='secondary' onClick={() => setShowCreateCol(false)}>
							–û—Ç–º–µ–Ω–∞
						</Button>
						<Button
							onClick={() => createColMutation.mutate()}
							disabled={!newColTitle.trim() || createColMutation.isPending}>
							{createColMutation.isPending ? "–°–æ–∑–¥–∞—ë–º‚Ä¶" : "–°–æ–∑–¥–∞—Ç—å"}
						</Button>
					</div>
				</div>
			</Modal>

			{/* ---- –ú–æ–¥–∞–ª–∫–∞: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å–∫–∏ (—Å—Ç–∏–∫–µ—Ä—ã –∏ —Ç.–ø.) ---- */}
			{data && (
				<DeskSettingsModal
					open={settingsOpen}
					onClose={() => setSettingsOpen(false)}
					projectId={projectId}
					boardId={data.board.id}
					stickers={stickers}
					onChangeStickers={setStickers}
				/>
			)}

			{/* ---- –ú–æ–¥–∞–ª–∫–∞: –ó–µ—Ä–∫–∞–ª–æ (stub) ---- */}
			<Modal
				open={showMirror}
				onClose={() => setShowMirror(false)}
				title='–ó–µ—Ä–∫–∞–ª–æ –¥–æ—Å–∫–∏'>
				<div className='space-y-3 text-sm text-neutral-700'>
					–§–∏—á–∞ ¬´–ó–µ—Ä–∫–∞–ª–æ¬ª –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ. –ù–∞—Å—Ç—Ä–æ–∏–º —Ñ–∏–ª—å—Ç—Ä—ã/–ø—Ä–∞–≤–∏–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ.
					<div className='flex justify-end'>
						<Button variant='secondary' onClick={() => setShowMirror(false)}>
							–ó–∞–∫—Ä—ã—Ç—å
						</Button>
					</div>
				</div>
			</Modal>
		</AppShell>
	);
}
